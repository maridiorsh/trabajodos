# -*- coding: utf-8 -*-
"""app2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GknAUkeNS_hlrCbkbDO0F6_1uc2KRy7R
"""

import streamlit as st
import cv2
import numpy as np
from PIL import Image
import pytesseract
from gtts import gTTS
import os
import glob
import time


color_fondo = (0, 128, 255)
st.header("BIENVENIDO A IMAGINATION")
st.write("Una aplicación con inteligencia artificial en donde podrás mediante una imagen, extraer texto y a su vez convertirlo en un audio")


# Función para convertir texto a voz
def text_to_speech(text, tld):
    tts = gTTS(text, lang=tld, slow=False)
    try:
        my_file_name = text[0:20]
    except:
        my_file_name = "audio"
    tts.save(f"temp/{my_file_name}.mp3")
    return my_file_name

# Definir tld
tld = "es"  # Cambia "es" al idioma que desees

st.header("Paso 1")
img_file_buffer = st.file_uploader("Carga aquí tu imagen", type=["jpg", "png", "jpeg"])
if img_file_buffer is not None:
    bytes_data = img_file_buffer.read()
    image = Image.open(img_file_buffer)
    st.image(image, caption="Imagen cargada", use_column_width=True)

    cv2_img = cv2.cvtColor(np.array(image), cv2.COLOR_RGB2BGR)
    text = pytesseract.image_to_string(cv2_img)
    st.write(text)
st.header("Paso 2")
if st.button("Convertir a audio"):
    if text:
        result = text_to_speech(text, tld)
        audio_file = open(f"temp/{result}.mp3", "rb")
        audio_bytes = audio_file.read()
        st.audio(audio_bytes, format="audio/mp3", start_time=0)
        st.markdown("<h2 class='header'>Texto en audio:</h2>", unsafe_allow_html=True)
        st.write(f"{text}")

# Función para eliminar archivos antiguos
def remove_files(n):
    mp3_files = glob.glob("temp/*.mp3")
    if len(mp3_files) != 0:
        now = time.time()
        n_days = n * 86400
        for f in mp3_files:
            if os.stat(f).st_mtime < now - n_days:
                os.remove(f)
                print("Deleted ", f)

remove_files(7)
